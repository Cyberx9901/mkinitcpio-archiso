# args: source, mountpoint
_mnt_bind()
{
    msg "::: Binding ${1} to ${2}"
    mkdir -p $newroot${2}
    /bin/mount -o bind ${1} $newroot${2}
}

# args: /path/to/image_file
_mnt_squashfs()
{
    img="${1}"
    mnt="${2}"
    img_fullname="${img##*/}";
    img_name="${img_fullname%.*}"
    tmp_mnt="/tmpfs/mnt/${img_name}"

    # FIX: This options does not work (see FS#17182)
    if [ "${copytoram}" = "y" ]; then
        msg ":: Copying squashfs image to RAM"
        /bin/cat ${img} > "/tmpfs/${base_img}"
        img="/tmpfs/${base_img}"
    fi

    msg "::: Adding new aufs branch: ${img_name}"
    mkdir -p "${tmp_mnt}"
    /bin/mount -r -t squashfs "${img}" "${tmp_mnt}"
    if [ "${mnt}" = "/" ]; then
        /bin/mount -t aufs -o remount,append:${tmp_mnt}=ro none "$newroot"
    else
        _mnt_bind "${tmp_mnt}" "${mnt}"
    fi
}

run_hook ()
{
    if [ "x${arch}" = "x" ]; then
        arch="$(uname -m)"
    fi

    if [ "x${tmpfs_size}" = "x" ]; then
        tmpfs_size="75%"
    fi

    if [ "x${isomounts}" != "x" ]; then
        isomounts="/bootmnt/${isomounts}"
    else
        isomounts="/bootmnt/isomounts"
    fi

    if [ "x${archisodevice}" = "x" ]; then
        archisodevice="/dev/archiso"
    fi

    # set mount handler for archiso
    mount_handler="archiso_mount_handler"
}

archiso_mount_handler() {
    newroot="$1"

    msg -n ":: Mounting tmpfs, size=${tmpfs_size}..."
    mount -t tmpfs -o "size=${tmpfs_size}" tmpfs /tmpfs
    msg "done."

    msg ":: Waiting for boot device..."
    while ! poll_device ${archisodevice} 30; do
      echo "ERROR: boot device didn't show up after 30 seconds..."
      echo "   Falling back to interactive prompt"
      echo "   You can try to fix the problem manually, log out when you are finished"
      launch_interactive_shell
    done

    FSTYPE=$(blkid -o value -s TYPE ${archisodevice} 2> /dev/null)
    if [ -n "${FSTYPE}" ]; then
        if mount -r -t "${FSTYPE}" ${archisodevice} /bootmnt > /dev/null 2>&1; then
            if [ -e "${isomounts}" ]; then
                echo "SUCCESS: Mounted archiso volume successfully."
                fserror="0"
            else
                echo "ERROR: Mounting was successful, but the ${isomounts} file does not exist."
                fserror="1"
            fi
        else
            echo "ERROR; Failed to mount ${archisodevice} (FS is ${FSTYPE})"
            fserror="1"
        fi
    else
        echo "ERROR: ${archisodevice} found, but the filesystem type is unknown."
        fserror="1"
    fi

    if [ "${fserror}" = "1" ]; then
        echo "   Falling back to interactive prompt"
        echo "   You can try to fix the problem manually, log out when you are finished"
        launch_interactive_shell
    fi

    msg ":: Mounting root (aufs) filesystem"
    /bin/mount -t aufs -o dirs=/tmpfs=rw none $newroot
    if [ $? -ne 0 ]; then
        echo "ERROR: while mounting root (aufs) filesystem."
        exit 1
    fi

    msg ":: Mounting images"
    while read img imgarch mountpoint type; do
        # check if this line is a comment (starts with #)
        [ "${img#"#"}" != "${img}" ] && continue

        [ "$imgarch" != "$arch" ] && continue

        [ ! -r "/bootmnt/${img}" ] && continue

        if [ "${type}" = "bind" ]; then
            _mnt_bind "/bootmnt/${img}" ${mountpoint}
        elif [ "${type}" = "squashfs" ]; then
            _mnt_squashfs "/bootmnt/${img}" "${mountpoint}"
        fi
    done < "${isomounts}"

    # Bind our bootmnt dir into the live system
    _mnt_bind /bootmnt /bootmnt

    if [ "${FSTYPE}" = "iso9660" -o "${FSTYPE}" = "udf" ]; then
        if [ -d /proc/sys/dev/cdrom ]; then
            echo 0 > /proc/sys/dev/cdrom/lock
            echo 0 > /proc/sys/dev/cdrom/autoeject
        fi
    fi

}

# vim:ft=sh:ts=4:sw=4:et:
